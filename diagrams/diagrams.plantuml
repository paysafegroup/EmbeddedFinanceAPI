@startuml "Deposit-rapid-transfer-low-risk-transactions"
	!theme cerulean-outline

    skinparam dpi 72
    skinparam shadowing false
    skinparam backgroundColor #FFFFFF
    skinparam Sequence {
        ParticipantBorderColor #282828
        ParticipantBackgroundColor #282828
        ParticipantFontSize 17
        ParticipantFontColor #FFFFFF
        ArrowColor #282828
        ArrowFontSize 17
        LifeLineBorderColor #FBC9D6
    }

    participant Customer
    participant Merchant
    box "Paysafe"
        participant "Paysafe API" as PaysafeAPI
        participant "Customer wallet" as CW
        participant "Merchant wallet" as MW
    end box
    participant "Rapid Transfer" as PSP

    autonumber
    Customer -> Merchant : Selects Rapid Transfer for a deposit
    Merchant -> PaysafeAPI : Get available banks \n GET **digitalwallets/v1/rapidtransferbanks/**
    PaysafeAPI -> Merchant : Returns available banks \n rapidTransferBanks : [\n	{id, bic, name, isAccountRequiredBeforeInitialization, limit, country} \n]
    Merchant -> Customer : Provide banks list for selection
    Customer -> Merchant : Select bank and continue               
        

    Merchant -> PaysafeAPI: Create a payment handle\n**POST /paymenthub/v1/paymenthandles**\n\nmerchantRefNum\ntransactionType: **PAYMENT**\npaymentType: **RAPID_TRANSFER**\nrapidTransfer:\n    sepa:\n        {accountHolderName, rapiTransferBankId, bic}\nbillingDetails: {street, country, zip}\namount: 100000\ncurrencyCode: EUR\nwallet: {customerId, fee}
    Merchant <-- PaysafeAPI: Return Payment Handle (Action = REDIRECT)\nid\npaymentHandleToken: XXXXXXX\nstatus: **INITIATED**\nlinks: [{rel: redirect_payment, href: https://...., method: GET}, ...]

    Merchant --> PSP: Redirect Customer to Rapid Transfer
    PSP --> PSP : Customer authenticates the payment
    PSP --> PaysafeAPI : Redirect Customer back to Paysafe
    

    par   
		alt rely on customer redirection
			PaysafeAPI --> Merchant : Redirect Customer back to Merchant's system
			Merchant -> PaysafeAPI: Get PaymentHandle status\n**GET /paymenthub/v1/paymenthandles/{paymenthandle_id}**
			Merchant <-- PaysafeAPI: Return Payment Handle (Action = REDIRECT)\nid\npaymentHandleToken: XXXXXXX\nstatus: **PAYABLE**\n. . .
			note left: Poll the status until the status is PAYABLE
		else rely on webhooks ( **recommended** )
			PaysafeAPI -> Merchant : Payment Handle webhook\n id\n merchantRefNum\n status: **PAYABLE**\n paymentHandleToken: XXXX ....    	
		end

        |||

		Merchant -> PaysafeAPI: Process Payment\n**POST /paymenthub/v1/payments**\nmerchantRefNum\namount\ncurrencyCode\npaymentHandleToken\nsettleWithAuth: **true**
    
		Merchant <-- PaysafeAPI: Return Payment\nid\nstatus: COMPLETED\nwallet:\n    customerAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee            \n    merchantAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee



	else 
        PSP -> PaysafeAPI : Notification of successful transfer
        
		activate PaysafeAPI
		PaysafeAPI [#FF0000]-> CW: Credit deposited amount\nto customer wallet
        CW [#FF0000]-> MW: Transfer amount from customer \nwallet to merchant wallet
		deactivate PaysafeAPI

		PaysafeAPI -> Merchant : Transaction webhooks\n id\n timestamp\ntransaction\n	{id, status: **COMPLETED**, slipId, customerId, accountId, merchantRefNum, direction ...}
   end

	== T + 1 ==

 	PaysafeAPI -> Merchant: Reconciliation report\ntransport protocol to be discussed
    note right: Includes transactions from\nMerchant merchant wallet \nand all customer wallet transactions
	
@enduml




@startuml "Deposit-rapid-transfer-high-risk-transactions"
    !theme cerulean-outline

    skinparam dpi 72
    skinparam shadowing false
    skinparam backgroundColor #FFFFFF
    skinparam Sequence {
        ParticipantBorderColor #282828
        ParticipantBackgroundColor #282828
        ParticipantFontSize 17
        ParticipantFontColor #FFFFFF
        ArrowColor #282828
        ArrowFontSize 17
        LifeLineBorderColor #FBC9D6
    }
 
    participant Customer
    participant Merchant
    box "Paysafe"
        participant "Paysafe API" as PaysafeAPI
        participant "Customer wallet" as CW
        participant "Merchant wallet" as MW
    end box
    participant "Rapid Transfer" as PSP

    autonumber

    Customer -> Merchant : Selects Rapid Transfer for a deposit
    Merchant -> PaysafeAPI : Get available banks \n GET **digitalwallets/v1/rapidtransferbanks/**
    PaysafeAPI -> Merchant : Returns available banks \n rapidTransferBanks : [\n	{id, bic, name, isAccountRequiredBeforeInitialization, limit, country} \n]
    Merchant -> Customer : Provide banks list for selection
    Customer -> Merchant : Select bank and continue 

    Merchant -> PaysafeAPI: Create a payment handle\n**POST /paymenthub/v1/paymenthandles**\n\nmerchantRefNum\ntransactionType: **PAYMENT**\npaymentType: **RAPID_TRANSFER**\nrapidTransfer:\n    sepa:\n        {accountHolderName, rapiTransferBankId, bic}\nbillingDetails: {street, country, zip}\namount: 100000\ncurrencyCode: EUR\nwallet: {customerId, fee}
    Merchant <-- PaysafeAPI: Return Payment Handle (Action = REDIRECT)\nid\npaymentHandleToken: XXXXXXX\nstatus: **INITIATED**\nlinks: [{rel: redirect_payment, href: https://...., method: GET}, ...]

    Merchant --> PSP: Redirect Customer to Rapid Transfer
    PSP --> PSP : Customer authenticates the payment
    PSP --> PaysafeAPI : Redirect Customer back to Paysafe
  
    par   
		alt rely on customer redirection
			PaysafeAPI --> Merchant : Redirect Customer back to Merchant's system
			Merchant -> PaysafeAPI: Get PaymentHandle status\n**GET /paymenthub/v1/paymenthandles/{paymenthandle_id}**
			Merchant <-- PaysafeAPI: Return Payment Handle (Action = REDIRECT)\nid\npaymentHandleToken: XXXXXXX\nstatus: **PAYABLE**\n. . .
			note left: Poll the status until the status is PAYABLE
		else rely on webhooks ( **recommended** )
			PaysafeAPI -> Merchant : Payment Handle webhook\n id\n merchantRefNum\n status: **PAYABLE**\n paymentHandleToken: XXXX ....    	
		end

        |||

		Merchant -> PaysafeAPI: Process Payment\n**POST /paymenthub/v1/payments**\nmerchantRefNum\namount\ncurrencyCode\npaymentHandleToken\nsettleWithAuth: **true**
		
		Merchant <-- PaysafeAPI: Return Payment\nid\nstatus: PROCESSING\nwallet:\n    customerAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee            \n    merchantAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee

    else 

        PSP -> PaysafeAPI : Notification of customer's authentication
        PaysafeAPI -> Merchant : Transaction webhooks\n id\n timestamp\ntransaction\n	{id, status: **PROCESSING**, slipId, customerId, accountId, merchantRefNum, direction ...}

    end


    |||


    PSP -> PaysafeAPI : Notification of successful deposit
   
    activate PaysafeAPI
	PaysafeAPI [#FF0000]-> CW: Credit deposited amount\nto customer wallet
	CW [#FF0000]-> MW: Transfer amount from customer \nwallet to merchant wallet
	deactivate PaysafeAPI

    PaysafeAPI -> Merchant : Transaction webhooks\n id\n timestamp\ntransaction\n	{id, status: **COMPLETED**, slipId, customerId, accountId, merchantRefNum, direction ...}


	== T + 1 ==

 	PaysafeAPI -> Merchant: Reconciliation report\ntransport protocol to be discussed
    note right: Includes transactions from\nMerchant merchant wallet \nand all customer wallet transactions

@enduml







@startuml "Withdraw-bank-account"
!theme cerulean-outline

skinparam dpi 72
skinparam shadowing false
skinparam backgroundColor #FFFFFF
skinparam Sequence {
ParticipantBorderColor #282828
ParticipantBackgroundColor #282828
ParticipantFontSize 17
ParticipantFontColor #FFFFFF
ArrowColor #282828
ArrowFontSize 17
LifeLineBorderColor #FBC9D6
}

participant Merchant
box "Paysafe"
participant "Paysafe API" as PaysafeAPI
participant "Customer wallet" as CW
participant "Merchant wallet" as MW
end box
participant "Customer's Bank Account" as CBA

autonumber

Merchant -> PaysafeAPI: Create a customer payment handle\n**POST /paymenthub/v1/paymenthandles**\n\nmerchantRefNum\ntransactionType: **STANDALONE_CREDIT**\npaymentType: **BANK_TRANSFER**\nsepa:\n {accountHolderName, bic, iban}\namount: 100000\ncurrencyCode: EUR\nwallet: \n customerId\n fee\n customerAccount:\n id
Merchant <-- PaysafeAPI: Return Payment Handle (Action = NONE)\nid\npaymentHandleToken: XXXXXXX\nstatus: **PAYABLE**

...

Merchant -> PaysafeAPI: Process standalone credit\n**POST /paymenthub/v1/standalonecredits**\nmerchantRefNum\namount\ncurrencyCode\npaymentHandleToken
activate PaysafeAPI

MW [#FF0000]-> CW: Transfer amount from \n merchant wallet to customer wallet
PaysafeAPI [#FF0000]->CW: Debit the amount from \n customer wallet
PaysafeAPI [#FF0000]-> PaysafeAPI: Schedule bank wire tranfer\nto Customer's bank account

deactivate PaysafeAPI

Merchant <-- PaysafeAPI: Returns Standalone credit\nid\nstatus: COMPLETED\nwallet:\n customerAccount\n transactions[]:\n id\n status\n type\n direction\n amount\n fee \n merchantAccount\n transactions[]:\n id\n status\n type\n direction\n amount\n fee


== . . . ==

PaysafeAPI [#FF0000]-> CBA: Bank wire transfer to customer's bank account

== T + 1 ==

PaysafeAPI -> Merchant: Reconciliation report\ntransport protocol to be discussed
note right: Includes transactions from\nMerchant merchant wallet \nand all customer wallet transactions
@enduml

